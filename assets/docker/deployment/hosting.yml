---
x-logging: &default-logging
  driver: loki
  options: &default-logging-options
    loki-url: https://loki.${SYNOLOGY_BASIC_URL}/loki/api/v1/push
    loki-retries: 5
    loki-batch-size: 400
    loki-batch-wait: 2s
    loki-timeout: 10s
    loki-max-backoff: 5s
    loki-min-backoff: 1s
    loki-tenant-id: default

x-labels: &default-labels
  com.centurylinklabs.watchtower.enable: true
  recreat.container: true
  container.label.group: hosting

x-limits: &resource-limits
  mem_limit: "256m"
  mem_reservation: "64m"
  cpu_shares: "512"

services:
  cloudflared:
    container_name: cloudflared
    hostname: cloudflared
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN:?CLOUDFLARE_TOKEN required}
    restart: always
    <<: *resource-limits
    logging:
      <<: *default-logging
      options:
        <<: *default-logging-options
        loki-external-labels: job=cloudflared
    environment:
      UID: ${UID_NAS_ADMIN:-1026}
      GID: ${GID_NAS_ADMIN:-100}
      TUNNEL_METRICS: ${TUNNEL_METRICS:-0.0.0.0:8080}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    networks:
      dockerization:
    labels:
      <<: *default-labels
      monitoring: cloudflared

  pihole:
    container_name: pihole
    hostname: pihole
    image: pihole/pihole
    restart: always
    cap_add:
      - NET_ADMIN
    security_opt:
      - no-new-privileges=false
    deploy:
      resources:
        limits:
          memory: 512MB
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "-p53", "pi.hole"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      <<: *default-logging
      options:
        <<: *default-logging-options
        loki-external-labels: job=pihole
    environment:
      UID: ${UID_NAS_ADMIN:-1026}
      GID: ${GID_NAS_ADMIN:-100}
      FTLCONF_LOCAL_IPV4: ${FTLCONF_LOCAL_IPV4:-0.0.0.0}
      FTLCONF_LOCAL_IPV6: ${FTLCONF_LOCAL_IPV6:-::}
      PIHOLE_UID: ${PIHOLE_UID:-1000}
      PIHOLE_GID: ${PIHOLE_GID:-1000}
      DNSMASQ_USER: ${DNSMASQ_USER:-pihole}
      FTLCONF_dns_listeningMode: ${FTLCONF_dns_listeningMode:-all}
      FTLCONF_webserver_port: ${FTLCONF_webserver_port:-80}
      FTLCONF_webserver_api_password: ${PI_HOLE_PASSWORD:?Password is Missing}
      WEBTHEME: ${WEBTHEME:-dark}
      FTLCONF_dns_upstreams: ${FTLCONF_dns_upstreams:-1.1.1.1;1.0.0.1;8.8.8.8;8.8.4.4}
      FTLCONF_QUERY_LOGGING: ${FTLCONF_QUERY_LOGGING:-true}
      FTLCONF_MAXDBDAYS: ${FTLCONF_MAXDBDAYS:-30}
      FTLCONF_PRIVACYLEVEL: ${FTLCONF_PRIVACYLEVEL:-0}
      VIRTUAL_HOST: pihole.${SYNOLOGY_BASIC_URL}
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "81:80/tcp"
    volumes:
      - type: bind
        source: ${MOUNT_PATH_DOCKER_ROOT}/server/dnsmasq.d
        target: /etc/dnsmasq.d
      - type: bind
        source: ${MOUNT_PATH_DOCKER_ROOT}/server/pihole
        target: /etc/pihole
      - type: bind
        source: ${MOUNT_PATH_DOCKER_ROOT}/server/pihole/logs
        target: /var/log/pihole
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    networks:
      dockerization:
    labels:
      <<: *default-labels
      monitoring: pihole

networks:
  dockerization:
    external: true
