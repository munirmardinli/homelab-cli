name: Production CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      node_modules_cache: ${{ steps.set-cache-output.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci && ls node_modules
      - name: Set cache output
        id: set-cache-output
        run: echo "cache-hit=$(ls node_modules | wc -l | tr -d ' ')" >> $GITHUB_OUTPUT

  lint:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Typecheck
        run: npx tsc --noEmit

  quality-assurance:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Run npm audit
        run: npm audit --audit-level=moderate

  build-prod:
    needs:
      - lint
      - quality-assurance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Build application
        run: |
          npm run build
        env:
          NODE_ENV: production

  release:
    needs: build-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Build application
        run: npm run build
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
