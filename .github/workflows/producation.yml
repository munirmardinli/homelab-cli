name: Production CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GITGUARDIAN_API: ${{ secrets.GITGUARDIAN_API_KEY }}
  NPM_VERSION: "22"
  PYTHON_VERSION: "3.13"

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write
  actions: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      node_modules_cache: ${{ steps.set-cache-output.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Set cache output
        id: set-cache-output
        run: echo "cache-hit=$(ls node_modules | wc -l | tr -d ' ')" >> $GITHUB_OUTPUT
  eslint:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Run eslint tool
        run: npx eslint 'src/**/*.ts' --fix
  prettier:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Run prettier tool
        run: npx prettier '**/*.{ts,tsx}' --write
  dependency-cruiser:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Run dependency-cruiser tool
        run: npx dependency-cruiser --validate .dependency-cruiser.cjs src
  typecheck:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Run typecheck tool
        run: npx tsc --noEmit
  build-prod:
    needs:
      - eslint
      - prettier
      - typecheck
      - dependency-cruiser
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Build application
        run: |
          npx tsc
  deploy-docs:
    needs: build-prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          pip install -r config/requirements.txt
          pip install mkdocs-material \
            mkdocs-git-authors-plugin \
            mkdocs-git-revision-date-localized-plugin \
            mkdocs-git-committers-plugin-2

      - name: Create manifest.webmanifest
        run: |
          echo '{
            "name": "Homelab Setup",
            "short_name": "Homelab Setup",
            "start_url": "https://munirmardinli.github.io/homelab-cli",
            "display": "standalone",
            "background_color": "#ffffff",
            "theme_color": "#1565c0",
            "icons": [
              {
                "src": "images/icons/icon-192.png",
                "sizes": "192x192",
                "type": "image/png"
              },
              {
                "src": "images/icons/icon-512.png",
                "sizes": "512x512",
                "type": "image/png"
              }
            ]
          }' > docs/manifest.webmanifest

      - name: Create Robots
        run: |
          echo 'User-agent: *
          Disallow:
          Sitemap: https://munirmardinli.github.io/homelab/sitemap.xml' > docs/robots.txt

      - name: Prepare Environment
        run: |
          sed -i 's/tags_file: tags.md/# tags_file: tags.md/' mkdocs.yml
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Deploy to docs branch
        run: mkdocs gh-deploy --force --clean --no-history --remote-branch gh-pages
  git_guardian-prod:
    name: GitGuardian scan
    needs: build-prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.41.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ env.GITGUARDIAN_API }}
  trivy-scans-prod:
    runs-on: ubuntu-latest
    needs: build-prod
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Build application for Trivy
        run: |
          npx tsc
      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.3
        with:
          version: "v0.64.1"
      - name: Update Trivy DB
        run: trivy image --download-db-only
      - name: Scan npm vulnerabilities
        run: |
          trivy fs --scanners vuln \
          --severity HIGH,CRITICAL \
          --ignore-unfixed \
          --format table \
          --exit-code 1 \
          --dependency-tree \
          package-lock.json
      - name: Scan Dockerfile
        run: |
          trivy config config/.docker/Dockerfile \
          --severity HIGH,CRITICAL \
          --format table \
          --exit-code 1
      - name: Build Docker image
        run: docker build -f config/.docker/Dockerfile -t homelab-cli .
      - name: Scan Docker image
        run: |
          trivy image homelab-cli \
          --scanners vuln \
          --severity HIGH,CRITICAL \
          --ignore-unfixed \
          --format table \
          --exit-code 1
  check-audit-prod:
    needs: build-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        working-directory: ${{ github.workspace }}
